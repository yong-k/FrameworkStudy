<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	
	<!-- ※ 스프링이 제공하는 환경 설정 XML 파일 샘플 -->
	<!-- → 스프링이 생성하고 관리해야 할 객체들에 대한 정보 전달 -->
	
	<!-- ① 먼저 우리가 작성한 클래스 중에 뭘 bean으로 등록할 건지 생각 -->
	<!-- CalculatorImpl, CalculatorAspect 객체 생성해야함 -->
	
	
	<!-- CalculatorImpl 클래스의 객체 생성 및 관리를 위한 정보 전달 -->
	<bean id="cal" class="com.test.spr.CalculatorImpl"></bean>
	<!-- → 주 업무 수행하는 클래스 -->
	
	<!-- CalculatorAspect 클래스의 객체 생성 및 관리를 위한 정보 전달 -->
	<bean id="aspect" class="com.test.spr.CalculatorAspect"></bean>
	<!-- → 보조 업무 수행하는 클래스 -->
	
	
	<!-- check~!!! -->
	<!-- 스프링이 제공하는 가짜 객체(Proxy) 클래스의 객체 생성 및 관리를 위한 정보 전달 -->
	<!-- → 『ProxyFactoryBean』 → 이름만 기억해두기! 
	        ====================
	         └→ proxyFactory를 찍어내는 bean 
	         +) beanFactory : bean 찍어내는 factory
	            proxyFactory: proxy 찍어내는 factory -->
	            
	<!-- 아무 클래스나 가서 ProxyFactoryBean 입력했다가 지우면, import 구문 작성됨
		 그 import 구문 복사해서 class="" 에 작성함 -->
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
	<!-- └→ 너가 가진 설계도 사용해서 proxy 만들어줘 -->
	
		<!-- 주 업무 클래스의 인터페이스 정보 제공 -->
		<!-- → 『proxyInterfaces』 -->
		<!-- 단일값 넘겨주는 애가 아니니까 → list로 구성 -->
		<!-- 그런데 여기서 넘기는건 사실상 한 개 넘김 (여러개일 때는 쭉 나열하면 됨)-->
		<property name="proxyInterfaces">
			<list>
				<value>com.test.spr.Calculator</value>
			</list>
		</property>
		
		<!-- 주 업무 클래스의 객체 정보 제공 -->
		<!-- → 『target』 -->
		<!-- 주업무 수행해야 하는 거 → CalculatorImpl  
		     → 단수로 제공되는거니까 그냥 ref="cal" 참조하라고 하면 끝! 
		     그런데 다른 복수로 제공되는 것들은 list 만들어서 넘겨줘야 한다. -->
		<property name="target" ref="cal"></property>
		
		<!-- 보조 업무 클래스의 객체 정보 제공 -->
		<!-- → 『interceptorNames』 -->
	 	<!-- 보조 업무도 before/after/aroundAdvice 여러개가 있을 수 있으니 복수형으로 names! -->
	 	<!-- 그런데 여기서 넘기는건 사실상 한 개 넘김 -->
	 	<property name="interceptorNames">
	 		<list>
	 			<!-- 보조 업무는 우리가 위에서 aspect로 만들어놓았음 -->
	 			<value>aspect</value>
	 		</list>
	 	</property>
	</bean>
	<!-- 
		proxy 쓸 때, property name으로
		proxyInterfaces, target, interceptorNames 는 고정!
		proxy가 그 값들을 필요로 함
		저렇게 쓰면 뭐 그 안에 getter(), setter() 써서 알아서 해주는듯?
	-->
	
	
</beans>