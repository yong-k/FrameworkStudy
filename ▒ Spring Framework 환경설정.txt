■■■ Spring Framework 환경설정 ■■■

※ 스프링 프레임워크(Spring Framework) 구성을 위해
   스프링 프레임워크 관련 파일을 다운로드 받아야 하는데
   http://www.spring.io 경로에 접근하여 확인해보면
   다운로드 받을 수 있는 경로를 찾을 수 없는 상태이다.
   (STS 연동 (Maven 활용)만 가능한 형태...)
    ---
     └→ Spring Tool Sheet (이클립스처럼 돌아가는 아이)
	  스프링에 집중해서 만들어놓은 이클립스
	  스프링 전용 이클립스

	STS 형태 사용하면 가뜩이나 스프링 컨테이너 안에서 해서 뭐하는지 안보이는데
	가뜩이나 안에서 어떻게 돌아가는지 안보임..!
	그래서 지금은 STS로 안할거임
	조금 더 spring을 쓰기 편안한 환경을 제공하는거라 실무에 나가서 
	금방 잘 사용할 수 있음!
	우리는 그거보다 조금 더 열약한 환경 일부러 사용할거임!


○ 적용 및 테스트가 원활한 버전으로 실습 환경 구성 (비 STS)

   ① spring-framework-3.0.2-with-docs.zip
      기본적인 스프링 프레임워크 구성에 필요한 필수적인 jar 파일과
      스프링 프레임워크 설명문서(pdf 버전, html 버전)가 포함된 항목
      스프링 원래의 jar 파일들~!!!

   ② spring-framework-3.0.2-dependencies
      스프링 프레임워크 구성에 의존성을 가진 jar 파일들이 포함된 항목
      어떤 기능을 수행하느냐에 따라 추가적으로 필요한 항목
      스프링이 참조하는 의존 jar 파일들~!!!


※ 주의
   다운로드 받은 두 개의 압축 파일은 C:\ 또는 D:\ 드라이브 루트에
   폴더를 생성하여 압축을 풀어놓는다.
   그 안에 들어있는 jar 파일들을 선택적으로 복사하여 사용할 예정이기 때문에
   쉬운 경로에 압축을 풀어놓는다는 의미도 있지만
   압축을 해제하는 과정에서 이름(경로 포함)이 길어서 제대로 압축을 해제하지
   못하고 오류가 발생하기 때문에 간단한 경로에서 압축을 해제할 수 있도록 한다.


------------------------------------------------------------------------------------------------

■■■ IoC/DI 실습 01 ■■■

※ 스프링 프레임워크 없이 IoC/DI 개념 실습

○ 실습 성격 및 주요사항
   1. 콘솔 프로젝트
   2. 성적 처리
      국어, 영어, 수학 점수를 입력받아 총점, 평균을 출력하는 프로그램

○ 물리적 파일 구성
   1. Record.java		→ 인터페이스
   2. RecordView.java		→ 인터페이스
   3. RecordImpl1.java		→ Record 인터페이스를 구현하는 클래스
   4. RecordImpl2.java		→ Record 인터페이스를 구현하는 클래스
   5. RecordViewImpl.java	→ RecordView 인터페이스를 구현하는 클래스
   6. Main.java			→ 클래스. main() 메소드가 포함된 테스트 클래스

- RecordImpl1, RecordImpl2 각자 수행하는 업무 조금 다름
지금 현재 2번 인터페이스는 안쓰고 있다.

지금한 거 설명으로 비유하자면,

Record.java → 자동차 인터페이스
RecordImpl1 → 이삭이의 스포츠카 클래스
RecordImpl2 → 문정이의 배달트럭 클래스

RecordView     → 차고 인터페이스
RecordViewImpl → 민성이의 차고 클래스

main.java → 민성이의 차고에 이삭이의 스포츠카 주차 → view.setRecord(rec1);
                             문정이의 배달트럭 주차 → view.setRecord(rec2);
  
→ 차고 인터페이스에 구멍 뚫어놓은거 아니고 민성이의 차고만 있는 상태라
   RecordView 사용되지 지금은 필요 없는거

나중에 
-충희의 차고 클래스
-소민이의 차고 클래스   
만들고, 
-건축물 클래스도 만들어서 거기에 차고 인터페이스로 모양만 뚫어놓으면
-그 건물에는 스포츠카,배달트럭 다 주차 가능

------------------------------------------------------------------------------------------------

■■■ IoC/DI 실습 02 ■■■

※ 스프링 프레임워크 적용해서 IoC/DI 개념 실습

○ 실습 환경 구성
   → 스프링 자원을 활용할 수 있는 환경 구성
   1. 프로젝트명 마우스 우클릭
   2. Build Path > Configure Build Path... 메뉴 선택
   3. Libraries 탭 선택 > Add External JARs... 버튼 클릭
   4. 필요한 jar 파일을 해당 프로젝트에 외부 라이브러리로 등록
      - 경로1 : D:\s-f-3.0.2-with-docs\dist
	·파일1 : org.springframework.asm-3.0.2.RELEASE.jar
	·파일2 : org.springframework.beans-3.0.2.RELEASE.jar
	·파일3 : org.springframework.context-3.0.2.RELEASE.jar
	·파일4 : org.springframework.core-3.0.2.RELEASE.jar
	·파일5 : org.springframework.expression-3.0.2.RELEASE.jar
      - 경로2 : D:\s-f-3.0.2-dependencies\org.apache.commons
		\com.springsource.org.apache.commons.logging\1.1.1
	·파일6 : com.springsource.org.apache.commons.logging-1.1.1
   5. 스프링 프레임워크의 환경 설정 파일을 XML 형식으로 생성
      생성 위치는 프로젝트 하위의 src 디렉터리
      현재 실습에서의 파일 이름은 사용자가 임의로 부여하여 생성하는 것이 가능
      → 『applicationContext.xml』
   6. 생성한 applicationContext.xml 파일에
      스프링이 참조하게 될 객체에 대한 정보와 DI 설정을 추가하게 되며
      이와 같은 문서의 구성을 위해 스프링에서 제공하는 문서 참조
      - 참조 경로 : D:\s-f-3.0.2-with-docs\docs\spring-framework-reference\htmlsingle
	·참조 파일 : spring-framework-reference.html
	·참조 위치 : Ⅲ.Core Technologies ...
                         3.2.1. Configurations metadata
          → 해당 위치의 xml 샘플 파일 내용을 복사하여
             applicationContext.xml 에 덮어쓰기(전체 선택 후 붙여넣기)


○ 실습 성격 및 주요사항
   1. 콘솔 프로젝트
   2. 성적 처리
      국어, 영어, 수학 점수를 입력받아 총점, 평균을 출력하는 프로그램

○ 물리적 파일 구성
   1. Record.java		→ 인터페이스
      → SpringPrj01 프로젝트의 기존 소스코드 활용
   2. RecordView.java		→ 인터페이스
      → SpringPrj01 프로젝트의 기존 소스코드 활용
   3. RecordImpl1.java		→ Record 인터페이스를 구현하는 클래스
      → SpringPrj01 프로젝트의 기존 소스코드 활용
   4. RecordImpl2.java		→ Record 인터페이스를 구현하는 클래스
      → SpringPrj01 프로젝트의 기존 소스코드 활용
   5. RecordViewImpl.java	→ RecordView 인터페이스를 구현하는 클래스
      → SpringPrj01 프로젝트의 기존 소스코드 활용
   6. Main.java			→ 클래스. main() 메소드가 포함된 테스트 클래스
      → 수정(check~!!!)
   7. applicationContext.xml	→ 프로젝트 > src 폴더 하위에 생성
                                   (현재 파일의 이름은 임의로 지정 가능)


------------------------------------------------------------------------------------------------

■■■ IoC/DI 실습 03 ■■■

※ 스프링 프레임워크 없이 IoC/DI 개념 실습, 강한 결합

○ 실습 성격 및 주요사항
   1. 콘솔 프로젝트
   2. 데이터베이스 연동 프로젝트 구성
   3. 오라클 암호화 / 복호화 적용

○ 물리적 파일 구성
   1. SpringPrj03_scott.sql	→ 데이터베이스 관련 준비
   2. MemberDTO.java		→ DTO 역할
				   TBL_MEMBERLIST 테이블 레코드 참조
   3. OracleDAO.java		→ DAO 역할 → 실습 진행간 계정 설정만 다르게 연결
   4. MssqlDAO.java		→ DAO 역할 → 실습 진행간 계정 설정만 다르게 연결
					       -----------------------------------
						Mssql 이 지금 깔려있는 상태 아니니까..!
   5. MemberList.java		→ DAO 클래스를 참조하는 클래스
   				   의존관계 설정, print() 메소드 구현
   6. Main.java			→ 클래스. main() 메소드가 포함된 테스트 클래스

------------------------------------------------------------------------------------------------

■■■ IoC/DI 실습 04 ■■■

※ 스프링 프레임워크 적용해서 IoC/DI 개념 실습

○ 실습 성격 및 주요사항
   1. 콘솔 프로젝트
   2. 데이터베이스 연동 프로젝트 구성
   3. 오라클 암호화 / 복호화 적용

○ 물리적 파일 구성
   1. SpringPrj03_scott.sql	→ 데이터베이스 관련 준비
   2. MemberDTO.java		→ DTO 역할
				   TBL_MEMBERLIST 테이블 레코드 참조
   3. OracleDAO.java		→ DAO 역할 → 실습 진행간 계정 설정만 다르게 연결
   4. MssqlDAO.java		→ DAO 역할 → 실습 진행간 계정 설정만 다르게 연결
   5. MemberList.java		→ DAO 클래스를 참조하는 클래스
   				   의존관계 설정, print() 메소드 구현
   6. Main.java			→ 클래스. main() 메소드가 포함된 테스트 클래스


○ 03 실습과 비교하여 추가적으로 필요한 파일
   7. IDAO.java			→ 인터페이스
			  	   OracleDAO와 MssqlDAO 열어서 우선 들여다봐야 한다.
 				   OracleDAO와 MssqlDAO 둘 다 list() 메소드 있으니까
				   인터페이스 생성이 우선~!
   8. applicationContext	→ 스프링 환경 설정 파일
				   객체 생성 구문 및 DI 설정 구문 구성

-(applicationContext.xml)
 → 지금은 환경설정 파일 정해져있지 않다. 우리가 임의로 정하면 된다.

※ 라이브러리 등록
   - 경로1: C:\s-f-3.0.2-with-docs\dist
     ·파일1 : org.springframework.asm-3.0.2.RELEASE.jar
     ·파일2 : org.springframework.beans-3.0.2.RELEASE.jar
     ·파일3 : org.springframework.context-3.0.2.RELEASE.jar
     ·파일4 : org.springframework.core-3.0.2.RELEASE.jar
     ·파일5 : org.springframework.expression-3.0.2.RELEASE.jar

   - 경로2 : D:\s-f-3.0.2-dependencies\org.apache.commons
	     \com.springsource.org.apache.commons.logging\1.1.1
     ·파일6 : com.springsource.org.apache.commons.logging-1.1.1

   DAO과 Oracle과 연동되어야 하는 상황이기 때문에 (ojdbc6.jar파일)
   - 경로3 : C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib
     ·파일7 : ojdbc6.jar


- C:\s-f-3.0.2-with-docs\docs\spring-framework-reference\pdf 에서
  3) Core Technologies > 3.2-Composing XML-based configuration metadata
  p54에 있는 xml구문 복사해서 applicationContext.xml 에 추가
------------------------------------------------------------------------------------------------









